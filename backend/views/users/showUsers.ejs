<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Registered Users</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/stylesheets/users/showUsers.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter&display=swap" />
  <link rel="icon" type="image/png" href="/favicon.png">
</head>
<body>
  <%- include('../partials/header') %> 

  <div class="container">
    <div class="card">
      <h1>Registered Users</h1>

      <% if (users.length === 0) { %>
        <div class="alert alert-warning text-center">
          <h3>No users found.</h3>
        </div>
      <% } else { %>
        <table class="table table-hover table-bordered">
          <thead>
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Role</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <% users.forEach(user => { %>
              <tr>
                <td><%= user.name %></td>
                <td><%= user.email %></td>
                <td><%= user.role %></td>
                <td>
                  <form id="blockForm-<%= user._id %>" action="/users/block/<%= user._id %>" method="POST" style="display: inline;">
                    <button type="button" class="btn <%= user.isBlocked ? 'btn-success' : 'btn-danger' %> block-btn" 
                      data-action="<%= user.isBlocked ? 'unblock' : 'block' %>" 
                      data-user-id="<%= user._id %>">
                      <%= user.isBlocked ? 'Unblock' : 'Block' %>
                    </button>
                  </form>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      <% } %>

      <div class="text-center mt-4">
        <a href="/dashboard" class="custom-secondary-btn">Back to Dashboard</a>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const blockButtons = document.querySelectorAll('.block-btn');

      blockButtons.forEach(button => {
        button.addEventListener('click', () => {
          const action = button.getAttribute('data-action');
          const userId = button.getAttribute('data-user-id');
          const formId = `blockForm-${userId}`;
          const actionText = action === 'block' ? 'block this user' : 'unblock this user';
          const actionButtonText = action === 'block' ? 'Yes, Block' : 'Yes, Unblock';

          Swal.fire({
            title: `Are you sure you want to ${actionText}?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: action === 'block' ? '#d33' : '#28a745',
            cancelButtonColor: '#6c757d',
            confirmButtonText: actionButtonText,
          }).then((result) => {
            if (result.isConfirmed) {
             fetch(`/users/block/${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .then(response => {
                console.log(response);
                return response.json();
            })
            .then(data => {
                console.log(data);
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonColor: '#4CAF50',
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonColor: '#d33',
                    });
                }
            })
            .catch(error => {
                console.error('Fetch error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred. Please try again later.',
                    icon: 'error',
                    confirmButtonColor: '#d33',
                });
            });
            }
          });
        });
      });

      const urlParams = new URLSearchParams(window.location.search);

      // Verifica se há um parâmetro de sucesso indicando que o usuário foi desbloqueado
      if (urlParams.get('success') === 'unblocked') {
        Swal.fire({
          icon: 'success',
          title: 'User Unblocked',
          text: 'The user has been successfully unblocked.',
          confirmButtonColor: '#4CAF50',
        });
      }
    });
  </script>
</body>
</html>