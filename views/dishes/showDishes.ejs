<!DOCTYPE html>
<html lang="pt">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Available Dishes</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="/stylesheets/dishes/showDishes.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter&display=swap" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="icon" type="image/png" href="/favicon.png">
  </head>
  <body>
    <%- include('../partials/header') %>

    <% if (user.role === 'Manager' || user.role === 'Admin') { %>
      <div class="create-dish-btn">
        <a href="/dishes/submitDishes" class="btn btn-info">Create New Dish</a>
      </div>
    <% } %>

    <div class="container mt-4">
      <h1>Available Dishes</h1>

      <div class="filters-section mb-4">
        <form id="filtersForm" method="GET" action="/dishes/showDishes" class="row g-3 align-items-end">
          <!-- Filtro por Nome -->
          <div class="col-md-4">
            <label for="name" class="form-label">Dish Name</label>
            <input type="text" id="name" name="name" class="form-control" placeholder="Search by Name" value="<%= filters.name || '' %>">
          </div>

          <!-- Filtro por Preço -->
          <div class="col-md-2">
            <label for="minPrice" class="form-label">Min Price</label>
            <input type="number" id="minPrice" name="minPrice" class="form-control" placeholder="Min" value="<%= filters.minPrice || '' %>">
          </div>
          <div class="col-md-2">
            <label for="maxPrice" class="form-label">Max Price</label>
            <input type="number" id="maxPrice" name="maxPrice" class="form-control" placeholder="Max" value="<%= filters.maxPrice || '' %>">
          </div>

          <!-- Filtro por Categoria -->
          <div class="col-md-4">
            <label for="category" class="form-label">Category</label>
            <select id="category" name="category" class="form-select">
              <option value="">All</option>
              <option value="carne" <%= filters.category === 'carne' ? 'selected' : '' %>>Meat</option>
              <option value="peixe" <%= filters.category === 'peixe' ? 'selected' : '' %>>Fish</option>
              <option value="sobremesa" <%= filters.category === 'sobremesa' ? 'selected' : '' %>>Dessert</option>
              <option value="vegetariano" <%= filters.category === 'vegetariano' ? 'selected' : '' %>>Vegetarian</option>
            </select>
          </div>

          <!-- Filtro por Alérgenos -->
          <div class="col-md-4">
            <label for="allergens" class="form-label">Allergens</label>
            <input type="text" id="allergens" name="allergens" class="form-control" placeholder="Search by Allergens" value="<%= filters.allergens || '' %>">
          </div>
        </form>
      </div>

      <% if (dishes.length === 0) { %>
        <div class="alert alert-warning text-center">
          <h3>No dishes found.</h3>
        </div>
      <% } else { %>
        <div class="row g-4">
          <% dishes.forEach(function(dish) { %>
            <div class="col-md-6 col-lg-4">
              <div class="card h-100">
                <div class="card-body d-flex flex-column justify-content-between">
                  <div>
                    <h5 class="card-title"><%= dish.name %></h5>                    
                    <p class="mt-2"><strong>Category:</strong> <%= dish.category %></p>
                    <p class="mb-1"><strong>Associated Menus:</strong></p>
                    <ul class="list-group">
                      <% if (dish.associatedMenus && dish.associatedMenus.length > 0) { %>
                        <% dish.associatedMenus.forEach(function(menu, index) { %>
                          <li class="list-group-item">
                            - <%= menu.menuName || 'Unnamed Menu' %>
                            <% if (menu.restaurants && menu.restaurants.length > 0) { %>
                              <ul class="mt-2">
                                <li>
                                  Restaurants: <%= menu.restaurants[0].name || 'Unnamed Restaurant' %>
                                  <% if (menu.restaurants.length > 1) { %>
                                    <span class="text-muted">
                                      +<%= menu.restaurants.length - 1 %> more
                                    </span>
                                  <% } %>
                                </li>
                              </ul>
                            <% } else { %>
                              <span class="text-muted">No associated restaurants.</span>
                            <% } %>
                          </li>
                        <% }) %>
                      <% } else { %>
                        <li class="text-muted">No associated menus.</li>
                      <% } %>
                    </ul>
                  </div>
                  <div class="d-flex justify-content-between mt-3">
                    <a href="/dishes/showDish/<%= dish._id %>" class="btn btn-sm btn-outline-primary">View</a>
                    <% if (user.role === 'Admin' || (user.role === 'Manager' && dish.managerId.toString() === user._id.toString())) { %>
                      <a href="/dishes/editDish/<%= dish._id %>" class="btn btn-sm btn-outline-secondary">Edit</a>
                      <button class="btn btn-outline-danger delete-dish-btn" data-dish-id="<%= dish._id %>">Delete</button>
                      <form action="/dishes/toggleVisibility/<%= dish._id %>" method="POST" style="display: inline;">
                        <button type="submit" class="btn btn-sm btn-outline-warning">
                          <%= dish.isVisible ? 'Hide' : 'Show' %>
                        </button>
                      </form>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      <% } %>

      <!-- Paginação -->
      <div class="text-center mt-5">
        <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %>" class="btn btn-outline-primary me-2">Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
          <a href="?page=<%= i %>" class="btn <%= currentPage === i ? 'btn-primary' : 'btn-outline-primary' %> me-2"><%= i %></a>
        <% } %>
        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>" class="btn btn-outline-primary">Next</a>
        <% } %>
      </div>
    </div>

    <script src="https://kit.fontawesome.com/yourkitid.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      // Função para reaplicar eventos aos elementos
      function applyEventListeners() {
        // Reaplicar eventos aos botões de exclusão
        document.querySelectorAll('.delete-dish-btn').forEach(button => {
          button.addEventListener('click', function () {
            const dishId = this.getAttribute('data-dish-id');
    
            Swal.fire({
              title: 'Are you sure?',
              text: "You won't be able to revert this!",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#ef4444',
              cancelButtonColor: '#6b7280',
              confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
              if (result.isConfirmed) {
                fetch(`/dishes/deleteDish/${dishId}`, {
                  method: 'POST'
                }).then(response => {
                  if (response.ok) {
                    Swal.fire({
                      icon: 'success',
                      title: 'Deleted!',
                      text: 'The dish has been deleted.',
                      timer: 1500,
                      showConfirmButton: false
                    }).then(() => window.location.reload());
                  } else {
                    Swal.fire({
                      icon: 'error',
                      title: 'Error!',
                      text: 'Failed to delete the dish.'
                    });
                  }
                });
              }
            });
          });
        });
    
        // Reaplicar eventos aos campos de filtro
        const filtersForm = document.getElementById('filtersForm');
        const filterInputs = filtersForm.querySelectorAll('input, select');
    
        // Função debounce para atrasar a execução
        function debounce(func, delay) {
          let timeout;
          return function (...args) {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), delay);
          };
        }
    
        // Função para atualizar os resultados dinamicamente
        const updateResults = debounce(() => {
          // Salvar o estado atual dos filtros
          const formData = new FormData(filtersForm);
          const queryString = new URLSearchParams(formData).toString();
          const url = `${filtersForm.action}?${queryString}`;
    
          // Atualizar a página com os novos resultados
          fetch(url)
            .then(response => response.text())
            .then(html => {
              // Substituir o conteúdo da lista de pratos
              const parser = new DOMParser();
              const doc = parser.parseFromString(html, 'text/html');
              const newContent = doc.querySelector('.container.mt-4').innerHTML;
              document.querySelector('.container.mt-4').innerHTML = newContent;
    
              // Reaplicar eventos aos novos elementos
              applyEventListeners();
            })
            .catch(error => console.error('Error fetching filtered results:', error));
        }, 300); // Atraso de 300ms
    
        // Adicionar evento de input e change com debounce
        filterInputs.forEach(input => {
          input.addEventListener('input', updateResults);
          input.addEventListener('change', updateResults); // Para selects
        });
      }
    
      // Aplicar eventos iniciais
      applyEventListeners();
    </script>
  </body>
</html>
``` 
