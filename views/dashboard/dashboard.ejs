<!DOCTYPE html>
<html lang="pt">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>
    <%= user.role %> dashboard
  </title>
  <link rel="stylesheet" href="/stylesheets/dashboard/managerDashboard.css" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="icon" type="image/png" href="/favicon.png">
</head>

<body>
  <%- include('../partials/header') %> 

  <div class="dashboard-container">
    <div style="flex: 2">
      <div class="chart-container" style="width: 900px; height: 250px; margin: auto; margin-bottom: 10px;">
        <canvas id="generalGraph"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="clientsGraph"></canvas>
      </div>
    </div>

    <div class="manager-menu">
      <h2><%= user.role %> menu</h2>
      <div class="menu-buttons">
        <% if (user.role === 'Manager') { %>
          <a href="/restaurants/submitRestaurant" class="menu-btn"><i class="fas fa-plus-circle"></i> Create restaurant</a>
          <a href="/restaurants/showRestaurants" class="menu-btn"><i class="fas fa-store"></i> Show restaurants</a>
          <a href="/menus/submitMenu" class="menu-btn"><i class="fas fa-book"></i> Create menu</a>
          <a href="/menus/showMenus" class="menu-btn"><i class="fas fa-book-open"></i> Show menus</a>
          <a href="/dishes/submitDishes" class="menu-btn"><i class="fas fa-utensil-spoon"></i> Create Dishes</a>
          <a href="/dishes/showDishes" class="menu-btn"><i class="fas fa-list-ol"></i> Show Dishes</a>
        <% } else if (user.role === 'Admin') { %>
          <a href="/restaurants/submitRestaurant" class="menu-btn"><i class="fas fa-plus-circle"></i> Create restaurant</a>
          <a href="/restaurants/showRestaurants" class="menu-btn"><i class="fas fa-store"></i> Show restaurants</a>
          <a href="/restaurants/pendingApproval" class="menu-btn"><i class="fas fa-check-circle"></i> Approve restaurants</a>
          <a href="/menus/submitMenu" class="menu-btn"><i class="fas fa-book"></i> Create menu</a>
          <a href="/menus/showMenus" class="menu-btn"><i class="fas fa-book-open"></i> Show menus</a>
          <a href="/dishes/submitDishes" class="menu-btn"><i class="fas fa-utensil-spoon"></i> Create Dishes</a>
          <a href="/dishes/showDishes" class="menu-btn"><i class="fas fa-list-ol"></i> Show Dishes</a>
          <a href="/users/showUsers" class="menu-btn"><i class="fas fa-users"></i> Show users</a>
          <a href="/admin/logs" class="menu-btn"><i class="fas fa-chart-line"></i> View Logs & Statistics</a>
          <a href="/orders/ordersHistory" class="menu-btn"><i class="fas fa-shopping-cart"></i> Orders history</a>
        <% } else if (user.role === 'Client') { %>
          <a href="/restaurants/showRestaurants" class="menu-btn"><i class="fas fa-store"></i> Show restaurants</a>
        <% } %>
      </div>
    </div>
  </div>

  <script>
  const chartOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: true,
        labels: {
          color: "#333",
          font: {
            size: 14,
            family: "Arial, sans-serif",
          },
        },
      },
      tooltip: {
        backgroundColor: "rgba(0, 0, 0, 0.8)",
        titleColor: "#fff",
        bodyColor: "#fff",
        padding: 12,
        usePointStyle: true,
        borderColor: "#fff",
        borderWidth: 1,
        cornerRadius: 8,
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        grid: {
          color: "rgba(0, 0, 0, 0.05)",
        },
        ticks: {
          stepSize: 1,
          color: "#333",
          font: {
            size: 12,
          },
        },
      },
      x: {
        grid: {
          display: false,
        },
        ticks: {
          color: "#333",
          font: {
            size: 12,
          },
        },
      },
    },
  };

  async function loadDashboardData() {
    try {
      const response = await fetch('/dashboard/data');
      if (!response.ok) {
        throw new Error("Erro ao carregar os dados do dashboard");
      }

      const { months, restaurantData, userData, menuData, dishData, orderData } = await response.json();

      // Gráfico de dados gerais (Restaurantes, Menus, Pratos e Orders)
      new Chart(document.getElementById("generalGraph"), {
        type: "pie", // Alterado para o tipo "pie"
        data: {
          labels: ["Restaurants created", "Menus created", "Dishes created", "Orders created"],
          datasets: [
            {
              label: "Dados Gerais",
              data: [
                restaurantData.reduce((a, b) => a + b, 0),
                menuData.reduce((a, b) => a + b, 0),
                dishData.reduce((a, b) => a + b, 0),
                orderData.reduce((a, b) => a + b, 0),
              ],
              backgroundColor: [
                "rgba(54, 162, 235, 0.8)", // Azul para Restaurantes
                "rgba(255, 206, 86, 0.8)", // Amarelo para Menus
                "rgba(75, 192, 192, 0.8)", // Verde para Pratos
                "rgba(153, 102, 255, 0.8)", // Roxo para Orders
              ],
              hoverBackgroundColor: [
                "rgba(54, 162, 235, 1)", // Azul mais forte para Restaurantes
                "rgba(255, 206, 86, 1)", // Amarelo mais forte para Menus
                "rgba(75, 192, 192, 1)", // Verde mais forte para Pratos
                "rgba(153, 102, 255, 1)", // Roxo mais forte para Orders
              ],
              borderColor: "rgba(255, 255, 255, 1)", // Borda branca para contraste
              borderWidth: 2,
            },
          ],
        },
        options: {
          responsive: true,
          maintainAspectRatio: false, // Permite ajustar o tamanho do gráfico
          plugins: {
            legend: {
              display: true,
              position: "bottom", // Move a legenda para baixo
              labels: {
                color: "#333", // Cor do texto da legenda
                font: {
                  size: 16, // Aumenta o tamanho do texto da legenda
                  family: "Arial, sans-serif",
                },
                padding: 20, // Espaçamento entre os itens da legenda
                usePointStyle: true, // Usa pontos ao invés de caixas na legenda
              },
            },
            tooltip: {
              backgroundColor: "rgba(0, 0, 0, 0.9)", // Fundo escuro para o tooltip
              titleColor: "#fff", // Cor do título no tooltip
              bodyColor: "#fff", // Cor do texto no tooltip
              padding: 15,
              usePointStyle: true,
              borderColor: "#fff",
              borderWidth: 1,
              cornerRadius: 10,
            },
            datalabels: {
              color: "#fff", // Cor do texto dentro do gráfico
              font: {
                size: 14,
                weight: "bold",
              },
              formatter: (value, context) => {
                const label = context.chart.data.labels[context.dataIndex];
                return `${label}: ${value}`; // Exibe o texto e o valor
              },
            },
          },
          layout: {
            padding: {
              top: 20,
              bottom: 20,
              left: 20,
              right: 20,
            },
          },
        },
      });
      // Gráfico de utilizadores registados
      new Chart(document.getElementById("clientsGraph"), {
        type: "line",
        data: {
          labels: months,
          datasets: [
            {
              label: "registered users",
              data: userData,
              borderColor: "rgba(255, 99, 132, 1)",
              backgroundColor: "rgba(255, 99, 132, 0.2)",
              tension: 0.4,
              fill: true,
              borderWidth: 3,
              pointBackgroundColor: "#fff",
              pointBorderColor: "rgba(255, 99, 132, 1)",
              pointBorderWidth: 2,
              pointHoverBackgroundColor: "#fff",
              pointHoverBorderColor: "rgba(255, 99, 132, 1)",
              pointHoverBorderWidth: 3,
            },
          ],
        },
        options: {
          ...chartOptions,
          scales: {
            ...chartOptions.scales,
            y: {
              ...chartOptions.scales.y,
              max: 6, // Limita o eixo Y a 6
            },
          },
        },
      });
    } catch (err) {
      console.error("Error loading dashboard data:", err);
    }
    
  }

  loadDashboardData();
</script>
</body>

</html>